import{a}from"./index-1DIB5rGU.js";async function r(){try{const r=await a.get("/marketplace");if(!r||!r.data)return console.error("Invalid response structure from /marketplace API"),[];let t;if(r.data.automations)t=r.data.automations;else if(Array.isArray(r.data))t=r.data;else{if(!r.data.data||!Array.isArray(r.data.data))return console.warn("Unexpected response format from /marketplace API:",r.data),[];t=r.data.data}if(!Array.isArray(t))return console.error("Automations data is not an array:",t),[];const e=t.filter(a=>a&&"object"==typeof a?a.id?!!a.name||(console.warn("Automation missing required 'name' field:",a),!1):(console.warn("Automation missing required 'id' field:",a),!1):(console.warn("Invalid automation object:",a),!1));return e.length!==t.length&&console.warn(`Filtered out ${t.length-e.length} invalid automation(s)`),e}catch(r){if(console.error("Failed to fetch automations:",r),0===r.status||"NETWORK_ERROR"===r.code)return console.warn("Network error - returning empty automations array"),[];if(r.status>=500)return console.warn("Server error - returning empty automations array"),[];if(r.status>=400&&r.status<500)return console.error("Client error when fetching automations:",r.message),[];throw new Error(`Failed to load automations: ${r.message||"Unknown error"}`)}}export{r as f};
